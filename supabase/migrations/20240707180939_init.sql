create type "public"."pricing_plan_interval" as enum ('day', 'week', 'month', 'year');

create type "public"."pricing_type" as enum ('one_time', 'recurring');

create type "public"."subscription_status" as enum ('trialing', 'active', 'canceled', 'incomplete', 'incomplete_expired', 'past_due', 'unpaid', 'paused');

create table "public"."stripe_customers" (
    "id" uuid not null default gen_random_uuid(),
    "stripe_customer_id" text,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."stripe_customers" enable row level security;

create table "public"."stripe_prices" (
    "id" text not null,
    "product_id" text,
    "active" boolean,
    "description" text,
    "unit_amount" bigint,
    "currency" text,
    "type" pricing_type,
    "interval" pricing_plan_interval,
    "interval_count" integer,
    "trial_period_days" integer,
    "metadata" jsonb
);


alter table "public"."stripe_prices" enable row level security;

create table "public"."stripe_products" (
    "id" text not null,
    "active" boolean,
    "name" text,
    "description" text,
    "image" text,
    "metadata" jsonb,
    "marketing_features" jsonb[] default '{}'::jsonb[]
);


alter table "public"."stripe_products" enable row level security;

create table "public"."stripe_subscriptions" (
    "id" text not null,
    "user_id" uuid not null,
    "status" subscription_status,
    "metadata" jsonb,
    "price_id" text,
    "quantity" integer,
    "cancel_at_period_end" boolean,
    "created" timestamp with time zone not null default timezone('utc'::text, now()),
    "current_period_start" timestamp with time zone not null default timezone('utc'::text, now()),
    "current_period_end" timestamp with time zone not null default timezone('utc'::text, now()),
    "ended_at" timestamp with time zone default timezone('utc'::text, now()),
    "cancel_at" timestamp with time zone default timezone('utc'::text, now()),
    "canceled_at" timestamp with time zone default timezone('utc'::text, now()),
    "trial_start" timestamp with time zone default timezone('utc'::text, now()),
    "trial_end" timestamp with time zone default timezone('utc'::text, now())
);


alter table "public"."stripe_subscriptions" enable row level security;

create table "public"."sys_faqs" (
    "id" uuid not null default gen_random_uuid(),
    "title" text,
    "icon" text,
    "subtitle" text,
    "questions" jsonb[] not null default '{}'::jsonb[]
);


alter table "public"."sys_faqs" enable row level security;

create table "public"."sys_notifications" (
    "id" bigint generated by default as identity not null,
    "title" text,
    "message" text,
    "read_at" timestamp with time zone,
    "action" jsonb default '{}'::jsonb,
    "user_id" uuid default gen_random_uuid(),
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."sys_notifications" enable row level security;

create table "public"."sys_shortcuts" (
    "id" uuid not null default gen_random_uuid(),
    "item" text,
    "user_id" uuid
);


alter table "public"."sys_shortcuts" enable row level security;

create table "public"."sys_users" (
    "id" uuid not null,
    "email" text,
    "phone" text,
    "full_name" text,
    "avatar_url" text,
    "billing_address" jsonb,
    "payment_method" jsonb,
    "created_at" timestamp with time zone default now(),
    "deleted_at" timestamp with time zone
);


alter table "public"."sys_users" enable row level security;

CREATE UNIQUE INDEX faqs_pkey ON public.sys_faqs USING btree (id);

CREATE UNIQUE INDEX prices_pkey ON public.stripe_prices USING btree (id);

CREATE UNIQUE INDEX products_pkey ON public.stripe_products USING btree (id);

CREATE UNIQUE INDEX stripe_customers_pkey ON public.stripe_customers USING btree (id);

CREATE UNIQUE INDEX subscriptions_pkey ON public.stripe_subscriptions USING btree (id);

CREATE UNIQUE INDEX sys_notifications_pkey ON public.sys_notifications USING btree (id);

CREATE UNIQUE INDEX sys_shortcuts_pkey ON public.sys_shortcuts USING btree (id);

CREATE UNIQUE INDEX users_pkey ON public.sys_users USING btree (id);

alter table "public"."stripe_customers" add constraint "stripe_customers_pkey" PRIMARY KEY using index "stripe_customers_pkey";

alter table "public"."stripe_prices" add constraint "prices_pkey" PRIMARY KEY using index "prices_pkey";

alter table "public"."stripe_products" add constraint "products_pkey" PRIMARY KEY using index "products_pkey";

alter table "public"."stripe_subscriptions" add constraint "subscriptions_pkey" PRIMARY KEY using index "subscriptions_pkey";

alter table "public"."sys_faqs" add constraint "faqs_pkey" PRIMARY KEY using index "faqs_pkey";

alter table "public"."sys_notifications" add constraint "sys_notifications_pkey" PRIMARY KEY using index "sys_notifications_pkey";

alter table "public"."sys_shortcuts" add constraint "sys_shortcuts_pkey" PRIMARY KEY using index "sys_shortcuts_pkey";

alter table "public"."sys_users" add constraint "users_pkey" PRIMARY KEY using index "users_pkey";

alter table "public"."stripe_customers" add constraint "public_stripe_customers_id_fkey" FOREIGN KEY (id) REFERENCES sys_users(id) ON DELETE CASCADE not valid;

alter table "public"."stripe_customers" validate constraint "public_stripe_customers_id_fkey";

alter table "public"."stripe_prices" add constraint "prices_currency_check" CHECK ((char_length(currency) = 3)) not valid;

alter table "public"."stripe_prices" validate constraint "prices_currency_check";

alter table "public"."stripe_prices" add constraint "public_stripe_prices_product_id_fkey" FOREIGN KEY (product_id) REFERENCES stripe_products(id) not valid;

alter table "public"."stripe_prices" validate constraint "public_stripe_prices_product_id_fkey";

alter table "public"."stripe_subscriptions" add constraint "public_stripe_subscriptions_user_id_fkey" FOREIGN KEY (user_id) REFERENCES sys_users(id) ON DELETE CASCADE not valid;

alter table "public"."stripe_subscriptions" validate constraint "public_stripe_subscriptions_user_id_fkey";

alter table "public"."stripe_subscriptions" add constraint "subscriptions_price_id_fkey" FOREIGN KEY (price_id) REFERENCES stripe_prices(id) not valid;

alter table "public"."stripe_subscriptions" validate constraint "subscriptions_price_id_fkey";

alter table "public"."sys_notifications" add constraint "public_sys_notifications_user_id_fkey" FOREIGN KEY (user_id) REFERENCES sys_users(id) ON DELETE CASCADE not valid;

alter table "public"."sys_notifications" validate constraint "public_sys_notifications_user_id_fkey";

alter table "public"."sys_shortcuts" add constraint "public_sys_shortcuts_user_id_fkey" FOREIGN KEY (user_id) REFERENCES sys_users(id) ON DELETE CASCADE not valid;

alter table "public"."sys_shortcuts" validate constraint "public_sys_shortcuts_user_id_fkey";

alter table "public"."sys_users" add constraint "public_sys_users_id_fkey" FOREIGN KEY (id) REFERENCES auth.users(id) ON DELETE CASCADE not valid;

alter table "public"."sys_users" validate constraint "public_sys_users_id_fkey";

grant delete on table "public"."stripe_customers" to "anon";

grant insert on table "public"."stripe_customers" to "anon";

grant references on table "public"."stripe_customers" to "anon";

grant select on table "public"."stripe_customers" to "anon";

grant trigger on table "public"."stripe_customers" to "anon";

grant truncate on table "public"."stripe_customers" to "anon";

grant update on table "public"."stripe_customers" to "anon";

grant delete on table "public"."stripe_customers" to "authenticated";

grant insert on table "public"."stripe_customers" to "authenticated";

grant references on table "public"."stripe_customers" to "authenticated";

grant select on table "public"."stripe_customers" to "authenticated";

grant trigger on table "public"."stripe_customers" to "authenticated";

grant truncate on table "public"."stripe_customers" to "authenticated";

grant update on table "public"."stripe_customers" to "authenticated";

grant delete on table "public"."stripe_customers" to "service_role";

grant insert on table "public"."stripe_customers" to "service_role";

grant references on table "public"."stripe_customers" to "service_role";

grant select on table "public"."stripe_customers" to "service_role";

grant trigger on table "public"."stripe_customers" to "service_role";

grant truncate on table "public"."stripe_customers" to "service_role";

grant update on table "public"."stripe_customers" to "service_role";

grant delete on table "public"."stripe_prices" to "anon";

grant insert on table "public"."stripe_prices" to "anon";

grant references on table "public"."stripe_prices" to "anon";

grant select on table "public"."stripe_prices" to "anon";

grant trigger on table "public"."stripe_prices" to "anon";

grant truncate on table "public"."stripe_prices" to "anon";

grant update on table "public"."stripe_prices" to "anon";

grant delete on table "public"."stripe_prices" to "authenticated";

grant insert on table "public"."stripe_prices" to "authenticated";

grant references on table "public"."stripe_prices" to "authenticated";

grant select on table "public"."stripe_prices" to "authenticated";

grant trigger on table "public"."stripe_prices" to "authenticated";

grant truncate on table "public"."stripe_prices" to "authenticated";

grant update on table "public"."stripe_prices" to "authenticated";

grant delete on table "public"."stripe_prices" to "service_role";

grant insert on table "public"."stripe_prices" to "service_role";

grant references on table "public"."stripe_prices" to "service_role";

grant select on table "public"."stripe_prices" to "service_role";

grant trigger on table "public"."stripe_prices" to "service_role";

grant truncate on table "public"."stripe_prices" to "service_role";

grant update on table "public"."stripe_prices" to "service_role";

grant delete on table "public"."stripe_products" to "anon";

grant insert on table "public"."stripe_products" to "anon";

grant references on table "public"."stripe_products" to "anon";

grant select on table "public"."stripe_products" to "anon";

grant trigger on table "public"."stripe_products" to "anon";

grant truncate on table "public"."stripe_products" to "anon";

grant update on table "public"."stripe_products" to "anon";

grant delete on table "public"."stripe_products" to "authenticated";

grant insert on table "public"."stripe_products" to "authenticated";

grant references on table "public"."stripe_products" to "authenticated";

grant select on table "public"."stripe_products" to "authenticated";

grant trigger on table "public"."stripe_products" to "authenticated";

grant truncate on table "public"."stripe_products" to "authenticated";

grant update on table "public"."stripe_products" to "authenticated";

grant delete on table "public"."stripe_products" to "service_role";

grant insert on table "public"."stripe_products" to "service_role";

grant references on table "public"."stripe_products" to "service_role";

grant select on table "public"."stripe_products" to "service_role";

grant trigger on table "public"."stripe_products" to "service_role";

grant truncate on table "public"."stripe_products" to "service_role";

grant update on table "public"."stripe_products" to "service_role";

grant delete on table "public"."stripe_subscriptions" to "anon";

grant insert on table "public"."stripe_subscriptions" to "anon";

grant references on table "public"."stripe_subscriptions" to "anon";

grant select on table "public"."stripe_subscriptions" to "anon";

grant trigger on table "public"."stripe_subscriptions" to "anon";

grant truncate on table "public"."stripe_subscriptions" to "anon";

grant update on table "public"."stripe_subscriptions" to "anon";

grant delete on table "public"."stripe_subscriptions" to "authenticated";

grant insert on table "public"."stripe_subscriptions" to "authenticated";

grant references on table "public"."stripe_subscriptions" to "authenticated";

grant select on table "public"."stripe_subscriptions" to "authenticated";

grant trigger on table "public"."stripe_subscriptions" to "authenticated";

grant truncate on table "public"."stripe_subscriptions" to "authenticated";

grant update on table "public"."stripe_subscriptions" to "authenticated";

grant delete on table "public"."stripe_subscriptions" to "service_role";

grant insert on table "public"."stripe_subscriptions" to "service_role";

grant references on table "public"."stripe_subscriptions" to "service_role";

grant select on table "public"."stripe_subscriptions" to "service_role";

grant trigger on table "public"."stripe_subscriptions" to "service_role";

grant truncate on table "public"."stripe_subscriptions" to "service_role";

grant update on table "public"."stripe_subscriptions" to "service_role";

grant delete on table "public"."sys_faqs" to "anon";

grant insert on table "public"."sys_faqs" to "anon";

grant references on table "public"."sys_faqs" to "anon";

grant select on table "public"."sys_faqs" to "anon";

grant trigger on table "public"."sys_faqs" to "anon";

grant truncate on table "public"."sys_faqs" to "anon";

grant update on table "public"."sys_faqs" to "anon";

grant delete on table "public"."sys_faqs" to "authenticated";

grant insert on table "public"."sys_faqs" to "authenticated";

grant references on table "public"."sys_faqs" to "authenticated";

grant select on table "public"."sys_faqs" to "authenticated";

grant trigger on table "public"."sys_faqs" to "authenticated";

grant truncate on table "public"."sys_faqs" to "authenticated";

grant update on table "public"."sys_faqs" to "authenticated";

grant delete on table "public"."sys_faqs" to "service_role";

grant insert on table "public"."sys_faqs" to "service_role";

grant references on table "public"."sys_faqs" to "service_role";

grant select on table "public"."sys_faqs" to "service_role";

grant trigger on table "public"."sys_faqs" to "service_role";

grant truncate on table "public"."sys_faqs" to "service_role";

grant update on table "public"."sys_faqs" to "service_role";

grant delete on table "public"."sys_notifications" to "anon";

grant insert on table "public"."sys_notifications" to "anon";

grant references on table "public"."sys_notifications" to "anon";

grant select on table "public"."sys_notifications" to "anon";

grant trigger on table "public"."sys_notifications" to "anon";

grant truncate on table "public"."sys_notifications" to "anon";

grant update on table "public"."sys_notifications" to "anon";

grant delete on table "public"."sys_notifications" to "authenticated";

grant insert on table "public"."sys_notifications" to "authenticated";

grant references on table "public"."sys_notifications" to "authenticated";

grant select on table "public"."sys_notifications" to "authenticated";

grant trigger on table "public"."sys_notifications" to "authenticated";

grant truncate on table "public"."sys_notifications" to "authenticated";

grant update on table "public"."sys_notifications" to "authenticated";

grant delete on table "public"."sys_notifications" to "service_role";

grant insert on table "public"."sys_notifications" to "service_role";

grant references on table "public"."sys_notifications" to "service_role";

grant select on table "public"."sys_notifications" to "service_role";

grant trigger on table "public"."sys_notifications" to "service_role";

grant truncate on table "public"."sys_notifications" to "service_role";

grant update on table "public"."sys_notifications" to "service_role";

grant delete on table "public"."sys_shortcuts" to "anon";

grant insert on table "public"."sys_shortcuts" to "anon";

grant references on table "public"."sys_shortcuts" to "anon";

grant select on table "public"."sys_shortcuts" to "anon";

grant trigger on table "public"."sys_shortcuts" to "anon";

grant truncate on table "public"."sys_shortcuts" to "anon";

grant update on table "public"."sys_shortcuts" to "anon";

grant delete on table "public"."sys_shortcuts" to "authenticated";

grant insert on table "public"."sys_shortcuts" to "authenticated";

grant references on table "public"."sys_shortcuts" to "authenticated";

grant select on table "public"."sys_shortcuts" to "authenticated";

grant trigger on table "public"."sys_shortcuts" to "authenticated";

grant truncate on table "public"."sys_shortcuts" to "authenticated";

grant update on table "public"."sys_shortcuts" to "authenticated";

grant delete on table "public"."sys_shortcuts" to "service_role";

grant insert on table "public"."sys_shortcuts" to "service_role";

grant references on table "public"."sys_shortcuts" to "service_role";

grant select on table "public"."sys_shortcuts" to "service_role";

grant trigger on table "public"."sys_shortcuts" to "service_role";

grant truncate on table "public"."sys_shortcuts" to "service_role";

grant update on table "public"."sys_shortcuts" to "service_role";

grant delete on table "public"."sys_users" to "anon";

grant insert on table "public"."sys_users" to "anon";

grant references on table "public"."sys_users" to "anon";

grant select on table "public"."sys_users" to "anon";

grant trigger on table "public"."sys_users" to "anon";

grant truncate on table "public"."sys_users" to "anon";

grant update on table "public"."sys_users" to "anon";

grant delete on table "public"."sys_users" to "authenticated";

grant insert on table "public"."sys_users" to "authenticated";

grant references on table "public"."sys_users" to "authenticated";

grant select on table "public"."sys_users" to "authenticated";

grant trigger on table "public"."sys_users" to "authenticated";

grant truncate on table "public"."sys_users" to "authenticated";

grant update on table "public"."sys_users" to "authenticated";

grant delete on table "public"."sys_users" to "service_role";

grant insert on table "public"."sys_users" to "service_role";

grant references on table "public"."sys_users" to "service_role";

grant select on table "public"."sys_users" to "service_role";

grant trigger on table "public"."sys_users" to "service_role";

grant truncate on table "public"."sys_users" to "service_role";

grant update on table "public"."sys_users" to "service_role";

create policy "Enable read access for all users"
on "public"."stripe_prices"
as permissive
for select
to public
using (true);


create policy "Allow public read-only access."
on "public"."stripe_products"
as permissive
for select
to public
using (true);


create policy "Enable update for users based on user_id"
on "public"."stripe_subscriptions"
as permissive
for update
to public
using ((( SELECT auth.uid() AS uid) = user_id));


create policy "Enable read access for all users"
on "public"."sys_faqs"
as permissive
for select
to public
using (true);


create policy "Can update own user data."
on "public"."sys_users"
as permissive
for update
to public
using ((auth.uid() = id));


create policy "Can view own user data."
on "public"."sys_users"
as permissive
for select
to public
using ((auth.uid() = id));




